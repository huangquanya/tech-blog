(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{565:function(s,t,a){"use strict";a.r(t);var e=a(17),i=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"电脑上配置github和gitlab的ssh-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#电脑上配置github和gitlab的ssh-key"}},[s._v("#")]),s._v(" 电脑上配置github和gitlab的ssh key")]),s._v(" "),a("h2",{attrs:{id:"_1-什么是ssh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是ssh"}},[s._v("#")]),s._v(" 1. 什么是ssh")]),s._v(" "),a("p",[a("em",[s._v("SSH")]),s._v(" 为 Secure Shell 的缩写，"),a("em",[s._v("SSH")]),s._v(" 为建立在应用层基础上的安全协议。"),a("em",[s._v("SSH")]),s._v(" 是较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用 "),a("em",[s._v("SSH")]),s._v(" 协议可以有效防止远程管理过程中的信息泄露问题。")]),s._v(" "),a("h2",{attrs:{id:"_2-git中使用的ssh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-git中使用的ssh"}},[s._v("#")]),s._v(" 2. git中使用的ssh")]),s._v(" "),a("h3",{attrs:{id:"基于密匙的安全验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于密匙的安全验证"}},[s._v("#")]),s._v(" "),a("strong",[s._v("基于密匙的安全验证")])]),s._v(" "),a("p",[s._v("需要依靠"),a("a",{attrs:{href:"https://baike.baidu.com/item/%E5%AF%86%E5%8C%99",target:"_blank",rel:"noopener noreferrer"}},[s._v("密匙"),a("OutboundLink")],1),s._v("，也就是你必须为自己创建一对密匙，并把公用密匙放在需要访问的git服务器上。如果你要连接到SSH服务器上，客户端软件就会向服务器发出请求，请求用你的密匙进行安全验证。服务器收到请求之后，先在该服务器上你的主目录下寻找你的公用密匙，然后把它和你发送过来的公用密匙进行比较。如果两个密匙一致，服务器就用公用密匙加密“质询”（challenge）并把它发送给客户端软件。客户端软件收到“质询”之后就可以用你的私人密匙解密再把它发送给服务器。")]),s._v(" "),a("p",[s._v("这种方式加密所有传送的数据，而且“中间人”这种攻击方式也是不可能的（因为他没有你的私人密匙）。")]),s._v(" "),a("h2",{attrs:{id:"_3-如何生成ssh-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何生成ssh-key"}},[s._v("#")]),s._v(" 3. 如何生成ssh key")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("打开git bash窗口")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("ssh-keygen -t rsa -C "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx@xx.com"')]),s._v(" -f ~/.ssh/id_rsa\n")])])]),a("p",[s._v("window环境下，此时就会在是目录C:\\Users\\Admin\\.ssh\\下，生成id_rsa文件(私钥)和id_rsa.pub文件(公钥)")])]),s._v(" "),a("li",[a("p",[s._v("查看公钥和私钥")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看公钥")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ~/.ssh/id_rsa.pub\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看私钥")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ~/.ssh/id_rsa\n")])])])])]),s._v(" "),a("p",[s._v("这样我们就生成了ssh密钥对")]),s._v(" "),a("h2",{attrs:{id:"_4-配置git-和-gitlab的host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置git-和-gitlab的host"}},[s._v("#")]),s._v(" 4. 配置git 和 gitlab的HOST")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("进入git安装目录下 ~\\Git\\etc\\ssh\\")])]),s._v(" "),a("li",[a("p",[s._v("打开ssh_config文件 在文件最下方新增如下代码")])])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#根据git和gitlab不同的域名配置私钥\n# gitlab\nHost gitlab.com\n    HostName git.xxx.com\n    PreferredAuthentications publickey\n    # 填入生成的gitlab私钥\n    IdentityFile ~/.ssh/id_rsa_gitlab\n# github\nHost github.com\n    HostName github.com\n    PreferredAuthentications publickey\n    # 填入生成的github私钥\n    IdentityFile ~/.ssh/id_rsa_github\n")])])]),a("h2",{attrs:{id:"_5-在github-和gitlab上面配置ssh秘钥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-在github-和gitlab上面配置ssh秘钥"}},[s._v("#")]),s._v(" 5. 在Github 和GitLab上面配置ssh秘钥")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("github主页-》setting-》SSH -》new SSH key")])]),s._v(" "),a("li",[a("p",[s._v("gitLab主页-》setting-》SSH -》new SSH key")])]),s._v(" "),a("li",[a("p",[s._v("将git和gitLab的各自的公钥填入，确认")])]),s._v(" "),a("li",[a("p",[s._v("测试配置是否成功")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 测试gitlab")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -T git@git.xxx.com\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 测试github")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" -T git@github.com\n")])])])])]),s._v(" "),a("p",[s._v("这时我们就完成git和gitlab的ssh key配置")])])}),[],!1,null,null,null);t.default=i.exports}}]);